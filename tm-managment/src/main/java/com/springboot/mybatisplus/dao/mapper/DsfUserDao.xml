<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.com.do1.dsf.modules.dsf.dao.DsfUserDao">
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="DsfUserEntity" id="dsfUserMap">
        <id property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="deptId" column="dept_id"/>
        <result property="password" column="password"/>
        <result property="mobile" column="mobile"/>
        <result property="idCard" column="id_card"/>
        <result property="status" column="status"/>
        <result property="gmtCreated" column="gmt_created"/>
        <result property="gmtModified" column="gmt_modified"/>
        <result property="gmtAuthor" column="gmt_author"/>
        <result property="salt" column="salt"/>
        <result property="deptName" column="deptName"/>
        <result property="usertitle" column="usertitle"/>
        <result property="resouresPersonId" column="resouresPersonId"/>
        <result property="resouresPersonName" column="resouresPersonName"/>
        <association property="dsfPersonEntity" javaType="DsfPersonEntity">
            <id property="personId" column="person_id"/>
            <result property="personName" column="person_name"/>
            <result property="gender" column="gender"/>
            <result property="title" column="title"/>
            <result property="telephone" column="telephone"/>
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
            <result property="address" column="address"/>
            <result property="remark" column="remark"/>
            <result property="extattr" column="extattr"/>
        </association>
        <collection property="depts" ofType="cn.com.do1.dsf.modules.dsf.form.DeptForm">
            <id column="department_id" property="departmentId"/>
            <result column="department_full_name" property="departmentFullName"/>
        </collection>
    </resultMap>

    <select id="queryObject" resultMap="dsfUserMap">
        select A.user_id,
               A.user_name,
               A.dept_id,
               A.password,
               A.mobile,
               A.id_card,
               A.status,
               A.gmt_created,
               A.gmt_modified,
               A.gmt_author,
               A.salt,
               C.title as usertitle,
               (select d.name from address_book_department d where d.id = A.dept_id) deptName,
               (select p.person_id from tb_dsf_user_resource_person p where p.user_id = A.user_id) resouresPersonId,
               (select bp.name from tb_dsf_user_resource_person p,address_book_person bp where p.person_id = bp.id and p.user_id = A.user_id) resouresPersonName,
               C.person_id,
               C.person_name,
               C.gender,
               C.title,
               C.telephone,
               C.email,
               C.avatar,
               C.address,
               C.remark,
               C.extattr
         from tb_dsf_user A inner join tb_dsf_user_person_ref B on A.user_id=B.user_id inner
         join tb_dsf_person C on B.person_id=C.person_id where A.user_id = #{value}
    </select>

    <select id="queryList" resultMap="dsfUserMap" >
    select  A.user_id,
                A.user_name,
                A.dept_id,
                A.password,
                A.mobile,
                A.id_card,
                A.status,
                A.gmt_created,
                A.gmt_modified,
                A.gmt_author,
                (select d.name from address_book_department d where d.id = A.dept_id) deptName,
                (select p.person_id from tb_dsf_user_resource_person p where p.user_id = A.user_id) resouresPersonId,
                A.user_id person_id,
                A.person_name               
        from tb_dsf_user A
        <where>
            <if test="superAdmin != null ">
                A.user_id != #{superAdmin}
            </if>
            <if test="username != null and username.trim() != ''">
                and (A.user_name like CONCAT('%',#{username, typeHandler=EscapeTypeHandler},'%') or A.person_name like CONCAT('%',#{username, typeHandler=EscapeTypeHandler},'%') )
            </if>
            <if test="deptId != null and deptId.trim() != ''">
                and (A.dept_id =#{deptId} or A.dept_id in ( select department_id from address_book_department_ref where department_path like '%.${deptId}.%' )
                or A.dept_id in ( select department_id from address_book_department_ref where department_path like '${deptId}.%' ))
                <if test="dpids != null">
                    and A.dept_id in 
                    <foreach collection="dpids" index="index" item="item" open="(" separator="," close=")">
                        #{item}       
                    </foreach>
                </if>
            </if>
            <if test="status != null and status.trim() != ''">
                and A.status =#{status}
            </if>
            <if test="roleid != null and roleid.trim() != ''">
                and A.user_id not in (SELECT user_id from  tb_dsf_user_role_ref where role_id=#{roleid})
            </if>
            <if test="groupid != null and groupid.trim() != ''">
                and A.user_id not in (SELECT user_id from  tb_dsf_user_group_ref where group_id=#{groupid})
            </if>
        </where>
        <!-- select  A.user_id,
                A.user_name,
                A.dept_id,
                A.password,
                A.mobile,
                A.id_card,
                A.status,
                A.gmt_created,
                A.gmt_modified,
                A.gmt_author,
                C.title as usertitle,
                (select d.name from address_book_department d where d.id = A.dept_id) deptName,
                (select p.person_id from tb_dsf_user_resource_person p where p.user_id = A.user_id) resouresPersonId,
                C.person_id,
                A.person_name,
                C.gender,
                C.title,
                C.telephone,
                C.email,
                C.avatar,
                C.address,
                C.remark,
                C.extattr
        from tb_dsf_user A inner join tb_dsf_user_person_ref B on A.user_id=B.user_id inner
        join tb_dsf_person C on B.person_id=C.person_id
        <where>
            <if test="superAdmin != null ">
                A.user_id != #{superAdmin}
            </if>
            <if test="username != null and username.trim() != ''">
                and (A.user_name like CONCAT('%',#{username, typeHandler=EscapeTypeHandler},'%') or C.person_name like CONCAT('%',#{username, typeHandler=EscapeTypeHandler},'%') )
            </if>
            <if test="deptId != null and deptId.trim() != ''">
                and (A.dept_id =#{deptId} or A.dept_id in ( select department_id from address_book_department_ref where department_path like '%.${deptId}.%' )
                or A.dept_id in ( select department_id from address_book_department_ref where department_path like '${deptId}.%' ))
            </if>
            <if test="mobile != null and mobile.trim() != ''">
                and A.mobile like concat('%',#{mobile},'%')
            </if>
            <if test="idcard != null and idcard.trim() != ''">
                and A.id_card like concat('%',#{idcard},'%')
            </if>
            <if test="status != null and status.trim() != ''">
                and A.status =#{status}
            </if>
            <if test="roleid != null and roleid.trim() != ''">
                and A.user_id not in (SELECT user_id from  tb_dsf_user_role_ref where role_id=#{roleid})
            </if>
            <if test="groupid != null and groupid.trim() != ''">
                and A.user_id not in (SELECT user_id from  tb_dsf_user_group_ref where group_id=#{groupid})
            </if>

        </where> -->

    </select>

    <!-- 查询用户的所有权限 -->
    <select id="queryAllPerms" resultType="string">
        select DISTINCT m.perms from tb_dsf_user_role_ref ur
        LEFT JOIN tb_dsf_role_menu_ref rm on ur.role_id = rm.role_id
        LEFT JOIN tb_dsf_menu m on rm.function_id = m.menu_id
        where ur.user_id = #{userId} and m.perms is not NULL 
        union 
        select DISTINCT m.perms from tb_dsf_user_group_ref ug 
		INNER JOIN tb_dsf_group_role_ref gr on (ug.group_id = gr.group_id)
		INNER JOIN tb_dsf_role_menu_ref rm on (gr.role_id = rm.role_id) 
		INNER JOIN tb_dsf_menu m on (rm.function_id = m.menu_id) 
		where ug.user_id = #{userId} and m.perms is not NULL

        <!--<if test="rwaccess != null and rwaccess.trim() != ''">-->
            <!--and m.rw_access =#{rwaccess}-->
        <!--</if>-->

    </select>

    <!-- 查询用户的所有菜单ID -->
    <select id="queryAllMenuId" resultType="long">
        select distinct rm.function_id from tb_dsf_user_role_ref ur
        LEFT JOIN tb_dsf_role_menu_ref rm on ur.role_id = rm.role_id
        where ur.user_id = #{userId} 
        union 
        select distinct rm.function_id from tb_dsf_user_group_ref ug 
		INNER JOIN tb_dsf_group_role_ref gr on (ug.group_id = gr.group_id)
		INNER JOIN tb_dsf_role_menu_ref rm on (gr.role_id = rm.role_id) 
		where ug.user_id = #{userId}

        <!--<if test="rwaccess != null and rwaccess.trim() != ''">-->
            <!--and m.rw_access =#{rwaccess}-->
        <!--</if>-->

    </select>


    <select id="queryByUserName" resultType="DsfUserEntity">
        select * from tb_dsf_user where user_name = #{username}
    </select>



    <update id="updatePassword" parameterType="map">
        update tb_dsf_user set `password` = #{newPassword}
        where user_id = #{userId} and password = #{password}
    </update>


    <delete id="deleteBatch">
        delete from tb_dsf_user where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from tb_dsf_user_role_ref where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from tb_dsf_user_manage where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from tb_dsf_user_resource_person where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from tb_dsf_person where person_id in (select person_id from tb_dsf_user_person_ref where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        );
        delete from tb_dsf_user_person_ref where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
        delete from tb_dsf_user_addressbook where user_id in
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
        ;
    </delete>
    
    <select id="queryAddressList" resultMap="dsfUserMap">
	    SELECT DISTINCT t.user_id,t.person_id,t.person_name,t.user_name 
	      FROM(
	        SELECT 
	            dp.id user_id ,
	            dp.id person_id ,
	            dp. NAME person_name ,
	            dp.account user_name,
	            dpr.department_id dept_id
	        FROM
	        address_book_person dp
	        <if test="deptId != null and deptId.trim() != ''">
	           INNER JOIN address_book_person_ref dpr on (dp.account = dpr.account)
	        </if>
	        <where>
	            <if test="deptId != null and deptId.trim() != ''">
	               and (dpr.department_id in ( select department_id from address_book_department_ref where department_id = #{deptId} or department_path like '${deptId}.%' or department_path like '%.${deptId}.%' ))
	            </if>
	            <if test="name != null and name.trim() != ''">
	                and dp.NAME like CONCAT('%',#{name, typeHandler=EscapeTypeHandler},'%')
	            </if>
	        </where>
	       ) t
	       <if test="deptIds != null">
	             where t.dept_id in  
		        <foreach collection="deptIds" index="index" item="deptId" open="(" separator="," close=")">
		            #{deptId}
		        </foreach>
	       </if>
    </select>
  
    <select id="queryListByName" resultMap="dsfUserMap">
        SELECT A.user_id,
               A.user_name,
               C.person_id,
               C.person_name,
                uuid() department_id,
                bd.department_full_name
        FROM tb_dsf_user A inner join tb_dsf_user_person_ref B on A.user_id=B.user_id 
        INNER JOIN tb_dsf_person C on B.person_id=C.person_id
        LEFT JOIN address_book_department_ref bd ON A.dept_id = bd.department_id
        <where>
           <if test="name != null and name != ''">
              and C.person_name like CONCAT('%',#{name, typeHandler=EscapeTypeHandler},'%')
           </if>
           <if test="deptIds != null">
              and A.dept_id in 
               <foreach collection="deptIds" index="index" item="item" open="(" separator="," close=")">
                  #{item}       
               </foreach> 
           </if>
            <if test="roleid != null and roleid.trim() != ''">
                and A.user_id not in (SELECT user_id from  tb_dsf_user_role_ref where role_id=#{roleid})
            </if>
            <if test="groupid != null and groupid.trim() != ''">
                and A.user_id not in (SELECT user_id from  tb_dsf_user_group_ref where group_id=#{groupid})
            </if>
        </where>
    </select>
    
    <select id="queryAddressListByName" resultMap="dsfUserMap">
        SELECT
              dp.id user_id,
              dp.id person_id,
              dp.name person_name,
              dp.account user_name,
              uuid() department_id,
              bd.department_full_name 
        FROM address_book_person dp
        INNER JOIN address_book_person_ref dpr ON (dp.account = dpr.account)
        LEFT JOIN address_book_department_ref bd ON (dpr.department_id = bd.department_id)
        <!-- <if test="deptIds != null">
           INNER JOIN address_book_person_ref dpr on (dp.account = dpr.account)
        </if> -->
        where dp.name like CONCAT('%',#{name, typeHandler=EscapeTypeHandler},'%')
        <if test="deptIds != null">
           and dpr.department_id in 
           <foreach collection="deptIds" index="index" item="item" open="(" separator="," close=")">
                  #{item}       
           </foreach> 
        </if>
    </select>
    
    <select id="queryUserList" resultMap="dsfUserMap">
        SELECT A.user_id,
               A.user_name,
               C.person_id,
               C.person_name  
        FROM tb_dsf_user A inner join tb_dsf_user_person_ref B on A.user_id=B.user_id 
        INNER JOIN tb_dsf_person C on B.person_id=C.person_id
        where A.user_id in 
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}       
        </foreach> 
 
    </select>
    
</mapper>